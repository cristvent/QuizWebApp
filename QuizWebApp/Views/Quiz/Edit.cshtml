@model QuizLibrary.Quiz

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal row">
        <div class="col-md-4">
            <h4>Quiz</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.QuizId)
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 status-checkbox">
                    <div class="">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" id="assign-id" class="btn btn-default" />
                </div>
            </div>
        </div>
        <div id="edit-question-holder" class="col-md-8">
            <h4>Questions</h4>
            <hr />
            <div id="all-questions">

                <div class="hidden" id="question-count">@if (Model.Questions != null){ @Model.Questions.Count}</div>
                <div class="hidden" id="quiz-id">@Model.QuizId</div>

                @if (Model.Questions != null)
                {
                    for (var x = 0; x < Model.Questions.Count; x++)
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading question-heading"> <strong>Question @(x+1) </strong></div>
                            <div id="@x" class="panel-body question-list">
                                @Html.HiddenFor(model => Model.Questions[x].QuestionId)
                                @Html.HiddenFor(model => Model.Questions[x].QuizId)
                                <span class="hidden" id="question-count-db-@x">@Model.Questions[x].QuestionId</span>
                                <span class="hidden" id="position-count">@x</span>
                                <input type="text" id="" name="" class="form-control quest-input question-content-@x" value="@Model.Questions[x].Content" />
                                <a href="#drop@(x)" data-toggle="collapse">Answers</a>
                                <div id="drop@(x)" class="collapse answers-body">
                                    <button type="button" class="btn btn-success btn-xs add-button add-answer-button"> Add Answer </button>
                                    @{
                                        if (Model.Questions[x].Answers != null)
                                        {
                                            for (var i = 0; i < Model.Questions[x].Answers.Count; i++)
                                            {
                                                if (Model.Questions[x].Answers[i].Content != null)
                                                {
                                                    <div id="question@(i)" class="col-xs-12 new-answer-holder">
                                                        <button type="button" id="delete-this-@(x)-@i" class="btn btn-danger btn-xs delete-current-answer">x</button>
                                                        <div class="col-xs-8 answer-content-input">
                                                            @Html.HiddenFor(model => model.Questions[x].Answers[i].AnswerId, new { @class = "answer-id-" + (x) })
                                                            @Html.HiddenFor(model => model.Questions[x].Answers[i].QuestionId, new { @class = "answer-question-id-" + (x) })
                                                            <input type="text" id="" name="" class="form-control content-@x" value="@Model.Questions[x].Answers[i].Content" />
                                                        </div>
                                                        <div class="col-xs-1 answer-iscorrect-input">
                                                            @if (@Model.Questions[x].Answers[i].IsCorrect == true)
                                                            {
                                                                <input checked class="edit-checkbox is-correct-@x check-box" data-val="true" id="" name="" type="checkbox" value="true" />
                                                            }
                                                            else
                                                            {
                                                                <input class="edit-checkbox is-correct-@x check-box" data-val="true" id="" name="" type="checkbox" value="true" />
                                                            }
                                                            <input id="" name="is-correct-@x" type="hidden" value="false" />
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                                            }
                                        }

            </div>
            <hr />
            <div>
                <button type="button" class="btn btn-primary btn-xs" id="add-content-button"> Add New Questions </button>
            </div>
            <br />
            <div id="question-holder">
            </div>
        </div>
    </div>
                                        }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/Scripts/AddContent.js")

}
